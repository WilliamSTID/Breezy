name: CI/CD Breezy

on:
  push:
    branches: [ main, dev, ddabo, William, Yanis, Alain ]
  pull_request:
    branches: [ main, dev, ddabo, William, Yanis, Alain ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push images
        run: |
          for service in gateway frontend authentification feed followers interaction post publicProfile userAccount userProfile; do
            if [ "$service" = "frontend" ]; then
              docker build -t 843170960259.dkr.ecr.eu-west-1.amazonaws.com/breezy-frontend:${GITHUB_SHA} ./frontend
              docker push 843170960259.dkr.ecr.eu-west-1.amazonaws.com/breezy-frontend:${GITHUB_SHA}
            else
              docker build -t 843170960259.dkr.ecr.eu-west-1.amazonaws.com/breezy-$(echo $service | tr '[:upper:]' '[:lower:]'):${GITHUB_SHA} ./backend/apps/$service
              docker push 843170960259.dkr.ecr.eu-west-1.amazonaws.com/breezy-$(echo $service | tr '[:upper:]' '[:lower:]'):${GITHUB_SHA}
            fi
          done

      - name: Setup kubectl
        uses: azure/setup-kubectl@v3

      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig --region eu-west-1 --name breezy-cluster

      - name: Deploy to EKS
        run: |
          # Substitue les tags dâ€™image dans le manifest si besoin
          kubectl apply -f k8s/deployment.yaml

      - name: Check pods and services
        run: |
          kubectl get pods -A
          kubectl get svc -A